package com.Modulo5.controller;

import com.Modulo5.entities.Pedido;
import com.Modulo5.services.ClienteService;
import com.Modulo5.services.PacoteService;
import com.Modulo5.services.PedidoService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@Controller
public class PedidoController {

    private final PedidoService pedidoService;
    
    @Autowired
	private ClienteService clienteService; // Certifique-se de ter um serviço para alunos
	@Autowired
	private PacoteService pacoteService; // Certifique-se de ter um serviço para cursos

	@GetMapping("/obter-matriculas-aluno")
	@ResponseBody
	public List<String> obterMatriculasAluno() {
		List<Aluno> alunos = alunoService.listarTodosAlunos();
		List<String> matriculas = alunos.stream().map(aluno -> String.valueOf(aluno.getMatricula()))
				.collect(Collectors.toList());
		return matriculas;
	}

	@GetMapping("/obter-ids-cursos")
	@ResponseBody
	public List<Integer> obterIdsCursos() {
		List<Curso> cursos = cursoService.listarTodosCursos(); // Substitua pelo método correto do seu serviço
		List<Integer> idsCursos = cursos.stream().map(curso -> curso.getIdCurso()).collect(Collectors.toList());
		return idsCursos;
	}

    @Autowired
    public PedidoController(PedidoService pedidoService) {
        this.pedidoService = pedidoService;
    }

    @GetMapping("/pedidos.html")
    public String listarPedidos(Model model) {
        List<Pedido> pedidos = pedidoService.listarTodosPedidos();
        model.addAttribute("pedidos", pedidos);
        return "pedidos.html"; // Nome da página HTML para listar pedidos
    }

    @PostMapping("/cadastrar-pedido")
    public String cadastrarPedido(Pedido pedido, Model model) {
        Pedido pedidoCadastrado = pedidoService.cadastrarPedido(pedido);
        model.addAttribute("pedido", pedidoCadastrado);
        return "redirect:/pedidos.html?sucesso=true"; // Redireciona para a página "pedidos" com o parâmetro de sucesso
    }

    @DeleteMapping("/excluir-pedido/{idPedido}")
    public ResponseEntity<Void> excluirPedido(@PathVariable int idPedido) {
        pedidoService.excluirPedido(idPedido);
        return ResponseEntity.ok().build();
    }

    @GetMapping("/editar-pedido/{idPedido}")
    @ResponseBody
    public Pedido obterPedidoParaEdicao(@PathVariable int idPedido) {
        return pedidoService.buscarPorIdPedido(idPedido).orElseThrow();
    }
}
